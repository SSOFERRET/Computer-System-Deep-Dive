# :fire: 3장 C 디버깅 도구

## 🐞 디버그

컴퓨터 프로그램의 정확성이나 논리적인 오류를 찾아내는 테스트 과정

## 🐞 디버거

디버그를 하는 도구. 다른 프로그램의 실행을 제어한다.

프로그래머가 버그를 발견하고 원인을 파악하기 용이하다.

**기본 기능**
- 프로그램 코드의 단계적 실행
- 설정된 중단점까지 실행
- 메모리나 레지스터의 값을 확인

책에서는 대표적인 디버거 툴로써 GDB와 발그린드를 소개하고 있다.

## 🐞 GDB

**GDB의 작업**

- 프로그램을 시작하고 한 줄씩 실행
- 코드의 특정 지점에 도달하면 프로그램 실행 일시 중지
- 사용자 지정 조건에서 프로그램 실행 일시 중지
- 프로그램이 일시 중지된 실행 시점에서 변수의 값 표시
- 일시 중지 후 프로그램 계속 실행
- 충돌이 발생한 시점에서 프로그램의 실행 상태 검사
- 호출 스택에 있는 모든 스택 프레임의 내용 검사

## 🐞 발그린드

**Memcheck 디버깅 도구** 

프로그램의 힙 메모리 오류를 강조 표시한다.

메모리 누수나 메모리 접근 오류 등 난해한 힙 메모리 접근 오류를 식별하고 수정할 수 있다.

---

책에서 소개한 디버거 작업 예시를 직접 해보고 그에 대한 내용을 다루려했는데, GDB로 실행 파일 호출하는 단계에서 막혀버렸다😭. 
```
main.c:1:10: fatal error: stdio.h: no such file or directory
```
stdio.h 라이브러리를 걸고 넘어지는 이런 어처구니가 없는 오류가 계속 발생하는데, 지금까지의 구글링으로는 아직 해결하지 못했다...

이 오류를 얼른 해결하고 이 장에 대한 공부 내용 기록을 더하도록 해야겠다.
